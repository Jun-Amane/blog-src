{"version":3,"sources":["file:///home/s0phit1a/my_territory/work/mukau/themes/vanilla/assets/js/main.js"],"sourcesContent":["console.log(\"This site was generated by Hugo.\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () =\u003e {\n  const cdnBase = \"https://cdn.zzy040330.moe\";\n\n  /** 判断是否为站内“相对或根路径”资源 */\n  const isLocalPath = (url) =\u003e {\n    return (\n      !/^https?:\\/\\//i.test(url) \u0026\u0026 !/^\\/\\//.test(url) \u0026\u0026 !url.includes(cdnBase)\n    );\n  };\n\n  /** 将任意相对路径转为以站点根目录为基准的 pathname */\n  const toAbsolutePath = (src) =\u003e new URL(src, location.href).pathname;\n\n  /** 处理一个 Element（\u003cimg\u003e 或其他）指定属性 */\n  const handleEl = (el, attr) =\u003e {\n    const originalSrc = el.getAttribute(attr);\n    if (!originalSrc || !isLocalPath(originalSrc)) return;\n\n    const absPath = toAbsolutePath(originalSrc); // /images/xxx.png\n    const cdnUrl = cdnBase + absPath; // https://cdn.../images/xxx.png\n\n    // 预加载测试 CDN 是否可用\n    const tester = new Image();\n    tester.onload = () =\u003e el.setAttribute(attr, cdnUrl);\n    // onerror 留空即可保留原地址\n    tester.src = cdnUrl;\n  };\n\n  /** 扫描需要替换的标签 */\n  document.querySelectorAll(\"img\").forEach((img) =\u003e handleEl(img, \"src\"));\n  document\n    .querySelectorAll(\"img[data-src]\")\n    .forEach((img) =\u003e handleEl(img, \"data-src\")); // 懒加载支持\n});\n"],"mappings":";;AAAA,UAAQ,IAAI,kCAAkC;AAE9C,WAAS,iBAAiB,oBAAoB,MAAM;AAClD,UAAM,UAAU;AAGhB,UAAM,cAAc,CAAC,QAAQ;AAC3B,aACE,CAAC,gBAAgB,KAAK,GAAG,KAAK,CAAC,QAAQ,KAAK,GAAG,KAAK,CAAC,IAAI,SAAS,OAAO;AAAA,IAE7E;AAGA,UAAM,iBAAiB,CAAC,QAAQ,IAAI,IAAI,KAAK,SAAS,IAAI,EAAE;AAG5D,UAAM,WAAW,CAAC,IAAI,SAAS;AAC7B,YAAM,cAAc,GAAG,aAAa,IAAI;AACxC,UAAI,CAAC,eAAe,CAAC,YAAY,WAAW,EAAG;AAE/C,YAAM,UAAU,eAAe,WAAW;AAC1C,YAAM,SAAS,UAAU;AAGzB,YAAM,SAAS,IAAI,MAAM;AACzB,aAAO,SAAS,MAAM,GAAG,aAAa,MAAM,MAAM;AAElD,aAAO,MAAM;AAAA,IACf;AAGA,aAAS,iBAAiB,KAAK,EAAE,QAAQ,CAAC,QAAQ,SAAS,KAAK,KAAK,CAAC;AACtE,aACG,iBAAiB,eAAe,EAChC,QAAQ,CAAC,QAAQ,SAAS,KAAK,UAAU,CAAC;AAAA,EAC/C,CAAC;","names":[]}